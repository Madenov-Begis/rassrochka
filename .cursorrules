version: 1
rules:
  - description: Главный режим работы — разработка системы рассрочки по строгому техническому заданию
    enforce:
      - Всегда следуй последней версии технического задания проекта (включая изменения по фронтенду, Prisma, разделению API, чёрному списку и досрочному закрытию рассрочки)
      - Учитывай текущий контекст проекта — структуру кода, стэк технологий и бизнес-логику
      - Используй: NestJS + Prisma + PostgreSQL (Backend), React + TailwindCSS + shadcn/ui + Zustand + TanStack Query (Frontend)
      - Не предлагай архитектурные изменения без согласования
      - Следи за тем, чтобы frontend не использовал модульную структуру директорий
      - Следи за тем, чтобы backend был строго модульным: отдельные контроллеры, сервисы и модули
      - Вся авторизация — через `login` и `password`, без email, с одной формой входа и интерфейсом по роли

  - description: Документируй процесс разработки
    enforce:
      - В корне проекта должна быть папка `/docs/` со следующими файлами:
          - `project.md` — описание проекта, архитектура, логика, компоненты, обновляется при изменениях
          - `tasktracker.md` — задачи по проекту, их статус, прогресс
          - `changelog.md` — изменения по датам в стандарте:
              - `## [YYYY-MM-DD] - Описание`
              - `### Добавлено / Изменено / Исправлено`
          - `diary.md` — дневник решений, проблем и наблюдений
          - `qa.md` — список всех технических вопросов и размышлений по архитектуре
      - Обновляй соответствующие файлы документации после каждого значимого изменения
      - При любом шаге сначала синхронизируй `/docs/project.md`, затем код

  - description: Документируй код
    enforce:
      - Каждый новый файл должен начинаться с JSDoc блока:
        /**
         * @file: имя_файла
         * @description: краткое описание
         * @dependencies: зависимости
         * @created: YYYY-MM-DD
         */
      - Сохраняй единый стиль кода, используй линтер и pre-commit хуки
      - Не оставляй неиспользуемый код и комментарии
      - Соблюдай принципы: SOLID, DRY, KISS
      - Проводи ревью перед мержем любых изменений (даже если ты работаешь один)

  - description: Процесс взаимодействия
    enforce:
      - Всегда сохраняй контекст текущей задачи
      - Перед началом новой задачи запрашивай подтверждение
      - По завершении — предоставляй краткий итог (до 5 пунктов)
      - При неопределённости задавай уточняющие вопросы
      - Если задача крупная — предложи разбиение на подзадачи
      - В конце каждой сессии выводи отчёт: что сделано, что в работе, что дальше

  - description: Пример формата changelog.md
    template: |
      ## [2025-07-02] - Добавлен модуль Installments
      ### Добавлено
      - Модуль installments с контроллером, DTO и сервисом
      - Расчёт платежей и генерация графика

      ### Изменено
      - Обновлён project.md — добавлен раздел о Installments

      ### Исправлено
      - Устранена ошибка расчёта суммы при досрочном закрытии

  - description: Пример формата tasktracker.md
    template: |
      ## Задача: Создать модуль Installments
      - **Статус**: В процессе
      - **Описание**: Реализовать логику оформления рассрочки с расчётом платежей
      - **Шаги выполнения**:
        - [x] Создать модель и миграцию
        - [x] Написать контроллер, DTO
        - [ ] Связать с таблицей клиентов
        - [ ] Протестировать поведение
      - **Зависимости**: customers, payments

